[
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "allEvents",
    "outputs": [
      {
        "internalType": "address",
        "name": "eventOwner",
        "type": "address"
      },
      {
        "internalType": "string",
        "name": "title",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "description",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "eventImage",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "date",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "time",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "eventCost",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "meetUrl",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "ticketLimit",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "_title",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "_description",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "_eventImage",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "_date",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "_time",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "_eventCost",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "_meetUrl",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "_ticketLimit",
        "type": "uint256"
      }
    ],
    "name": "createEvent",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getAllEvents",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "eventOwner",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "title",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "description",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "eventImage",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "date",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "time",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "eventCost",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "meetUrl",
            "type": "string"
          },
          {
            "internalType": "address[]",
            "name": "members",
            "type": "address[]"
          },
          {
            "internalType": "uint256",
            "name": "ticketLimit",
            "type": "uint256"
          }
        ],
        "internalType": "struct EventHub.Event[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address payable",
        "name": "_owner",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "_cost",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_idx",
        "type": "uint256"
      }
    ],
    "name": "registerForEvent",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  }
]
